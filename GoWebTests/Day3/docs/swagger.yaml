definitions:
  github_com_davimerotto_web-server_internal_products.CreateProduct:
    properties:
      code:
        type: string
      color:
        type: string
      creation_date:
        type: string
      name:
        type: string
      price:
        type: number
      published:
        type: boolean
      stock:
        type: integer
    type: object
  github_com_davimerotto_web-server_internal_products.Product:
    properties:
      code:
        type: string
      color:
        type: string
      creation_date:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      published:
        type: boolean
      stock:
        type: integer
    type: object
  github_com_davimerotto_web-server_internal_products.UpdateProduct:
    properties:
      code:
        type: string
      color:
        type: string
      creation_date:
        type: string
      name:
        type: string
      price:
        type: number
      published:
        type: boolean
      stock:
        type: integer
    type: object
  github_com_davimerotto_web-server_pkg_web.HttpError:
    properties:
      code:
        example: 1
        format: int64
        type: integer
      data: {}
      error:
        example: generic error!
        format: string
        type: string
    type: object
  github_com_davimerotto_web-server_pkg_web.Response:
    properties:
      code:
        example: 1
        format: int64
        type: integer
      data: {}
      error:
        type: string
    type: object
info:
  contact:
    name: API Support
    url: https://developers.mercadolibre.com.ar/support
  description: This API Handle MELI Products.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://developers.mercadolibre.com.ar/es_ar/terminos-y-condiciones
  title: MELI Bootcamp API
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: get products
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_davimerotto_web-server_pkg_web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_davimerotto_web-server_pkg_web.HttpError'
      summary: List products
      tags:
      - Product
    patch:
      consumes:
      - application/json
      description: update all fields of product
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Update all fields of product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/github_com_davimerotto_web-server_internal_products.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_davimerotto_web-server_pkg_web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_davimerotto_web-server_pkg_web.HttpError'
      summary: Update all fields product
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: create product
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Add product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/github_com_davimerotto_web-server_internal_products.CreateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_davimerotto_web-server_pkg_web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_davimerotto_web-server_pkg_web.HttpError'
      summary: Create product
      tags:
      - Product
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: delete product
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_davimerotto_web-server_pkg_web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_davimerotto_web-server_pkg_web.HttpError'
      summary: Delete product
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: uptade any field of product
      parameters:
      - description: token
        in: header
        name: token
        required: true
        type: string
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/github_com_davimerotto_web-server_internal_products.UpdateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_davimerotto_web-server_pkg_web.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_davimerotto_web-server_pkg_web.HttpError'
      summary: Update product
      tags:
      - Product
swagger: "2.0"
